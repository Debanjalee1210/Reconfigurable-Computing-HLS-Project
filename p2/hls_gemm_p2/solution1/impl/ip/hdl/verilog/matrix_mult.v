// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrix_mult_matrix_mult,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.343063,HLS_SYN_LAT=2057,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=376,HLS_SYN_LUT=1264,HLS_VERSION=2022_1}" *)

module matrix_mult (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        b_address0,
        b_ce0,
        b_q0,
        b_address1,
        b_ce1,
        b_q1,
        prod_address0,
        prod_ce0,
        prod_we0,
        prod_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] a_address0;
output   a_ce0;
input  [7:0] a_q0;
output  [7:0] a_address1;
output   a_ce1;
input  [7:0] a_q1;
output  [7:0] b_address0;
output   b_ce0;
input  [7:0] b_q0;
output  [7:0] b_address1;
output   b_ce1;
input  [7:0] b_q1;
output  [7:0] prod_address0;
output   prod_ce0;
output   prod_we0;
output  [31:0] prod_d0;

reg ap_idle;
reg[7:0] a_address0;
reg a_ce0;
reg[7:0] a_address1;
reg a_ce1;
reg[7:0] b_address0;
reg b_ce0;
reg[7:0] b_address1;
reg b_ce1;
reg prod_ce0;
reg prod_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln10_reg_1335;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [7:0] reg_421;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [7:0] reg_425;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_11001;
reg   [7:0] reg_430;
reg   [7:0] reg_434;
reg   [7:0] reg_439;
reg   [7:0] reg_444;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] reg_449;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] reg_454;
reg   [7:0] reg_459;
reg   [7:0] reg_464;
reg   [4:0] i_1_reg_1323;
wire   [7:0] tmp_cast_fu_493_p3;
reg   [7:0] tmp_cast_reg_1328;
wire   [0:0] icmp_ln10_fu_502_p2;
reg   [4:0] j_load_reg_1339;
wire   [4:0] add_ln10_fu_517_p2;
reg   [4:0] add_ln10_reg_1344;
wire   [0:0] icmp_ln12_fu_527_p2;
reg   [0:0] icmp_ln12_reg_1349;
wire   [7:0] tmp_16_cast_fu_534_p3;
reg   [7:0] tmp_16_cast_reg_1358;
wire   [4:0] select_ln10_fu_559_p3;
reg   [4:0] select_ln10_reg_1370;
wire  signed [6:0] add_ln232_2_fu_602_p2;
reg  signed [6:0] add_ln232_2_reg_1398;
wire   [7:0] zext_ln232_46_fu_635_p1;
reg   [7:0] zext_ln232_46_reg_1418;
reg   [7:0] a_load_15_reg_1469;
wire  signed [5:0] tmp_33_cast_fu_726_p3;
reg  signed [5:0] tmp_33_cast_reg_1474;
wire  signed [6:0] tmp_34_cast_fu_738_p3;
reg  signed [6:0] tmp_34_cast_reg_1485;
reg   [7:0] b_load_13_reg_1500;
reg   [7:0] a_load_1_reg_1505;
wire   [7:0] grp_fu_411_p3;
reg   [7:0] select_ln10_2_reg_1575;
wire   [7:0] add_ln13_fu_946_p2;
reg   [7:0] add_ln13_reg_1605;
wire   [16:0] grp_fu_1234_p3;
reg   [16:0] add_ln886_1_reg_1620;
reg   [7:0] a_load_14_reg_1635;
reg   [7:0] b_load_1_reg_1650;
reg   [7:0] b_load_14_reg_1665;
wire   [16:0] grp_fu_1242_p3;
reg   [16:0] add_ln886_3_reg_1670;
reg   [7:0] a_load_reg_1675;
wire   [17:0] add_ln886_5_fu_1063_p2;
reg   [17:0] add_ln886_5_reg_1695;
wire   [16:0] grp_fu_1259_p3;
reg   [16:0] add_ln886_7_reg_1715;
wire   [17:0] add_ln886_9_fu_1125_p2;
reg   [17:0] add_ln886_9_reg_1735;
wire   [16:0] grp_fu_1276_p3;
reg   [16:0] add_ln886_10_reg_1745;
wire   [18:0] add_ln886_13_fu_1182_p2;
reg   [18:0] add_ln886_13_reg_1755;
wire   [18:0] add_ln886_6_fu_1207_p2;
reg   [18:0] add_ln886_6_reg_1760;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln232_33_fu_549_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln232_35_fu_571_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln232_37_fu_582_p1;
wire   [63:0] zext_ln232_51_fu_597_p1;
wire   [63:0] zext_ln232_53_fu_608_p1;
wire   [63:0] zext_ln232_39_fu_619_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln232_41_fu_630_p1;
wire   [63:0] zext_ln232_55_fu_644_p1;
wire   [63:0] zext_ln232_57_fu_655_p1;
wire   [63:0] zext_ln232_43_fu_666_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln232_45_fu_677_p1;
wire   [63:0] zext_ln232_59_fu_687_p1;
wire   [63:0] zext_ln232_61_fu_695_p1;
wire   [63:0] zext_ln232_31_fu_706_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln232_32_fu_717_p1;
wire   [63:0] zext_ln232_50_fu_733_p1;
wire   [63:0] zext_ln232_52_fu_745_p1;
wire   [63:0] zext_ln232_34_fu_760_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln232_36_fu_775_p1;
wire   [63:0] zext_ln232_54_fu_783_p1;
wire   [63:0] zext_ln232_56_fu_795_p1;
wire   [63:0] zext_ln232_38_fu_818_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln232_40_fu_829_p1;
wire   [63:0] zext_ln232_58_fu_841_p1;
wire   [63:0] zext_ln232_60_fu_849_p1;
wire   [63:0] zext_ln232_42_fu_903_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln232_44_fu_919_p1;
wire   [63:0] zext_ln232_49_fu_933_p1;
wire   [63:0] zext_ln232_62_fu_941_p1;
wire   [63:0] zext_ln10_fu_984_p1;
wire   [63:0] j_cast_fu_996_p1;
wire   [63:0] zext_ln232_63_fu_1009_p1;
wire   [63:0] zext_ln13_fu_1213_p1;
reg   [4:0] j_fu_112;
wire   [4:0] add_ln12_fu_969_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
reg   [4:0] i_fu_116;
wire   [4:0] select_ln10_1_fu_872_p3;
reg   [4:0] ap_sig_allocacmp_i_1;
reg   [8:0] indvar_flatten_fu_120;
wire   [8:0] add_ln10_1_fu_508_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [0:0] grp_fu_411_p0;
reg   [7:0] grp_fu_411_p1;
reg   [7:0] grp_fu_411_p2;
wire   [3:0] trunc_ln232_fu_489_p1;
wire   [3:0] trunc_ln10_fu_523_p1;
wire   [7:0] or_ln10_2_fu_543_p2;
wire   [7:0] or_ln10_4_fu_565_p2;
wire   [7:0] grp_fu_416_p3;
wire   [7:0] or_ln10_6_fu_576_p2;
wire   [6:0] zext_ln232_47_fu_587_p1;
wire   [6:0] add_ln232_1_fu_591_p2;
wire   [7:0] or_ln10_8_fu_613_p2;
wire   [7:0] or_ln10_10_fu_624_p2;
wire   [7:0] add_ln232_3_fu_638_p2;
wire   [7:0] add_ln232_4_fu_649_p2;
wire   [7:0] or_ln10_12_fu_660_p2;
wire   [7:0] or_ln10_14_fu_671_p2;
wire   [7:0] add_ln232_5_fu_682_p2;
wire  signed [7:0] sext_ln232_2_fu_692_p1;
wire   [7:0] or_ln10_fu_700_p2;
wire   [7:0] or_ln10_1_fu_711_p2;
wire   [7:0] or_ln10_3_fu_754_p2;
wire   [7:0] or_ln10_5_fu_769_p2;
wire  signed [6:0] sext_ln232_fu_780_p1;
wire   [7:0] tmp_36_cast_fu_788_p3;
wire   [7:0] or_ln10_7_fu_812_p2;
wire   [7:0] or_ln10_9_fu_823_p2;
wire   [7:0] tmp_37_cast_fu_834_p3;
wire  signed [7:0] sext_ln232_1_fu_846_p1;
wire   [7:0] mul_ln1540_2_fu_858_p0;
wire   [7:0] mul_ln1540_2_fu_858_p1;
wire   [15:0] mul_ln1540_2_fu_858_p2;
wire   [3:0] trunc_ln13_fu_877_p1;
wire   [7:0] or_ln10_11_fu_897_p2;
wire   [7:0] select_ln10_31_fu_908_p3;
wire   [7:0] or_ln10_13_fu_913_p2;
wire   [5:0] zext_ln232_48_fu_924_p1;
wire   [5:0] add_ln232_fu_927_p2;
wire  signed [7:0] sext_ln232_3_fu_938_p1;
wire   [7:0] tmp_s_fu_881_p3;
wire   [7:0] mul_ln1540_4_fu_955_p0;
wire   [7:0] mul_ln1540_4_fu_955_p1;
wire   [15:0] mul_ln1540_4_fu_955_p2;
wire   [4:0] xor_ln232_fu_1000_p2;
wire  signed [7:0] sext_ln232_4_fu_1005_p1;
wire   [7:0] mul_ln1540_6_fu_1018_p0;
wire   [7:0] mul_ln1540_6_fu_1018_p1;
wire   [15:0] mul_ln1540_6_fu_1018_p2;
wire   [7:0] mul_ln1540_8_fu_1044_p0;
wire   [7:0] mul_ln1540_8_fu_1044_p1;
wire   [15:0] mul_ln1540_8_fu_1044_p2;
wire   [16:0] grp_fu_1250_p3;
wire   [17:0] zext_ln886_5_fu_1060_p1;
wire   [17:0] zext_ln886_4_fu_1057_p1;
wire   [7:0] mul_ln1540_10_fu_1080_p0;
wire   [7:0] mul_ln1540_10_fu_1080_p1;
wire   [15:0] mul_ln1540_10_fu_1080_p2;
wire   [7:0] mul_ln1540_12_fu_1109_p0;
wire   [7:0] mul_ln1540_12_fu_1109_p1;
wire   [15:0] mul_ln1540_12_fu_1109_p2;
wire   [16:0] grp_fu_1267_p3;
wire   [17:0] zext_ln886_9_fu_1122_p1;
wire   [17:0] zext_ln886_8_fu_1119_p1;
wire   [7:0] mul_ln1540_14_fu_1137_p0;
wire   [7:0] mul_ln1540_14_fu_1137_p1;
wire   [15:0] mul_ln1540_14_fu_1137_p2;
wire   [7:0] mul_ln1540_1_fu_1153_p0;
wire   [7:0] mul_ln1540_1_fu_1153_p1;
wire   [15:0] mul_ln1540_1_fu_1153_p2;
wire   [16:0] grp_fu_1284_p3;
wire   [17:0] zext_ln886_12_fu_1169_p1;
wire   [17:0] zext_ln886_11_fu_1166_p1;
wire   [17:0] add_ln886_12_fu_1172_p2;
wire   [18:0] zext_ln886_13_fu_1178_p1;
wire   [18:0] zext_ln886_10_fu_1163_p1;
wire   [16:0] grp_fu_1293_p3;
wire   [17:0] zext_ln886_2_fu_1191_p1;
wire   [17:0] zext_ln886_1_fu_1188_p1;
wire   [17:0] add_ln886_2_fu_1194_p2;
wire   [18:0] zext_ln886_6_fu_1204_p1;
wire   [18:0] zext_ln886_3_fu_1200_p1;
wire   [19:0] zext_ln886_14_fu_1220_p1;
wire   [19:0] zext_ln886_7_fu_1217_p1;
wire   [19:0] add_ln886_14_fu_1223_p2;
wire   [7:0] grp_fu_1234_p0;
wire   [7:0] grp_fu_1234_p1;
wire   [15:0] grp_fu_1234_p2;
wire   [7:0] grp_fu_1242_p0;
wire   [7:0] grp_fu_1242_p1;
wire   [15:0] grp_fu_1242_p2;
wire   [7:0] grp_fu_1250_p0;
wire   [7:0] grp_fu_1250_p1;
wire   [15:0] grp_fu_1250_p2;
wire   [7:0] grp_fu_1259_p0;
wire   [7:0] grp_fu_1259_p1;
wire   [15:0] grp_fu_1259_p2;
wire   [7:0] grp_fu_1267_p0;
wire   [7:0] grp_fu_1267_p1;
wire   [15:0] grp_fu_1267_p2;
wire   [7:0] grp_fu_1276_p0;
wire   [7:0] grp_fu_1276_p1;
wire   [15:0] grp_fu_1276_p2;
wire   [7:0] grp_fu_1284_p0;
wire   [7:0] grp_fu_1284_p1;
wire   [15:0] grp_fu_1284_p2;
wire   [7:0] grp_fu_1293_p0;
wire   [7:0] grp_fu_1293_p1;
wire   [15:0] grp_fu_1293_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] grp_fu_1234_p00;
wire   [15:0] grp_fu_1234_p10;
wire   [16:0] grp_fu_1234_p20;
wire   [15:0] grp_fu_1242_p00;
wire   [15:0] grp_fu_1242_p10;
wire   [16:0] grp_fu_1242_p20;
wire   [15:0] grp_fu_1250_p00;
wire   [15:0] grp_fu_1250_p10;
wire   [16:0] grp_fu_1250_p20;
wire   [15:0] grp_fu_1259_p00;
wire   [15:0] grp_fu_1259_p10;
wire   [16:0] grp_fu_1259_p20;
wire   [15:0] grp_fu_1267_p00;
wire   [15:0] grp_fu_1267_p10;
wire   [16:0] grp_fu_1267_p20;
wire   [15:0] grp_fu_1276_p00;
wire   [15:0] grp_fu_1276_p10;
wire   [16:0] grp_fu_1276_p20;
wire   [15:0] grp_fu_1284_p00;
wire   [15:0] grp_fu_1284_p10;
wire   [16:0] grp_fu_1284_p20;
wire   [15:0] grp_fu_1293_p00;
wire   [15:0] grp_fu_1293_p10;
wire   [16:0] grp_fu_1293_p20;
wire   [15:0] mul_ln1540_10_fu_1080_p00;
wire   [15:0] mul_ln1540_10_fu_1080_p10;
wire   [15:0] mul_ln1540_12_fu_1109_p00;
wire   [15:0] mul_ln1540_12_fu_1109_p10;
wire   [15:0] mul_ln1540_14_fu_1137_p00;
wire   [15:0] mul_ln1540_14_fu_1137_p10;
wire   [15:0] mul_ln1540_1_fu_1153_p00;
wire   [15:0] mul_ln1540_1_fu_1153_p10;
wire   [15:0] mul_ln1540_2_fu_858_p00;
wire   [15:0] mul_ln1540_2_fu_858_p10;
wire   [15:0] mul_ln1540_4_fu_955_p00;
wire   [15:0] mul_ln1540_4_fu_955_p10;
wire   [15:0] mul_ln1540_6_fu_1018_p00;
wire   [15:0] mul_ln1540_6_fu_1018_p10;
wire   [15:0] mul_ln1540_8_fu_1044_p00;
wire   [15:0] mul_ln1540_8_fu_1044_p10;
reg    ap_condition_305;
reg    ap_condition_1249;
reg    ap_condition_465;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(mul_ln1540_2_fu_858_p0),
    .din1(mul_ln1540_2_fu_858_p1),
    .dout(mul_ln1540_2_fu_858_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(mul_ln1540_4_fu_955_p0),
    .din1(mul_ln1540_4_fu_955_p1),
    .dout(mul_ln1540_4_fu_955_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U3(
    .din0(mul_ln1540_6_fu_1018_p0),
    .din1(mul_ln1540_6_fu_1018_p1),
    .dout(mul_ln1540_6_fu_1018_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U4(
    .din0(mul_ln1540_8_fu_1044_p0),
    .din1(mul_ln1540_8_fu_1044_p1),
    .dout(mul_ln1540_8_fu_1044_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U5(
    .din0(mul_ln1540_10_fu_1080_p0),
    .din1(mul_ln1540_10_fu_1080_p1),
    .dout(mul_ln1540_10_fu_1080_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U6(
    .din0(mul_ln1540_12_fu_1109_p0),
    .din1(mul_ln1540_12_fu_1109_p1),
    .dout(mul_ln1540_12_fu_1109_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U7(
    .din0(mul_ln1540_14_fu_1137_p0),
    .din1(mul_ln1540_14_fu_1137_p1),
    .dout(mul_ln1540_14_fu_1137_p2)
);

matrix_mult_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U8(
    .din0(mul_ln1540_1_fu_1153_p0),
    .din1(mul_ln1540_1_fu_1153_p1),
    .dout(mul_ln1540_1_fu_1153_p2)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1234_p0),
    .din1(grp_fu_1234_p1),
    .din2(grp_fu_1234_p2),
    .ce(1'b1),
    .dout(grp_fu_1234_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1242_p0),
    .din1(grp_fu_1242_p1),
    .din2(grp_fu_1242_p2),
    .ce(1'b1),
    .dout(grp_fu_1242_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1250_p0),
    .din1(grp_fu_1250_p1),
    .din2(grp_fu_1250_p2),
    .ce(1'b1),
    .dout(grp_fu_1250_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1259_p0),
    .din1(grp_fu_1259_p1),
    .din2(grp_fu_1259_p2),
    .ce(1'b1),
    .dout(grp_fu_1259_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1267_p0),
    .din1(grp_fu_1267_p1),
    .din2(grp_fu_1267_p2),
    .ce(1'b1),
    .dout(grp_fu_1267_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1276_p0),
    .din1(grp_fu_1276_p1),
    .din2(grp_fu_1276_p2),
    .ce(1'b1),
    .dout(grp_fu_1276_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1284_p0),
    .din1(grp_fu_1284_p1),
    .din2(grp_fu_1284_p2),
    .ce(1'b1),
    .dout(grp_fu_1284_p3)
);

matrix_mult_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1293_p0),
    .din1(grp_fu_1293_p1),
    .din2(grp_fu_1293_p2),
    .ce(1'b1),
    .dout(grp_fu_1293_p3)
);

matrix_mult_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1249)) begin
            i_fu_116 <= 5'd0;
        end else if ((1'b1 == ap_condition_305)) begin
            i_fu_116 <= select_ln10_1_fu_872_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_465)) begin
        if ((icmp_ln10_fu_502_p2 == 1'd0)) begin
            indvar_flatten_fu_120 <= add_ln10_1_fu_508_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1249)) begin
            j_fu_112 <= 5'd0;
        end else if ((1'b1 == ap_condition_305)) begin
            j_fu_112 <= add_ln12_fu_969_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        reg_425 <= a_q0;
    end else if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_425 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_434 <= b_q0;
    end else if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_434 <= b_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_439 <= b_q1;
    end else if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_439 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_444 <= a_q0;
        end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_444 <= a_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_449 <= a_q1;
    end else if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_449 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        reg_454 <= b_q0;
    end else if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_454 <= b_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_459 <= b_q1;
        end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_459 <= b_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_load_14_reg_1635 <= a_q0;
        add_ln886_3_reg_1670 <= grp_fu_1242_p3;
        b_load_14_reg_1665 <= b_q0;
        b_load_1_reg_1650 <= b_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_load_15_reg_1469 <= a_q0;
        b_load_13_reg_1500 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_load_1_reg_1505 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_load_reg_1675 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_502_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln10_reg_1344 <= add_ln10_fu_517_p2;
        icmp_ln12_reg_1349 <= icmp_ln12_fu_527_p2;
        j_load_reg_1339 <= ap_sig_allocacmp_j_load;
        tmp_16_cast_reg_1358[7 : 4] <= tmp_16_cast_fu_534_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln13_reg_1605 <= add_ln13_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln232_2_reg_1398 <= add_ln232_2_fu_602_p2;
        select_ln10_reg_1370 <= select_ln10_fu_559_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln886_10_reg_1745 <= grp_fu_1276_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln886_13_reg_1755 <= add_ln886_13_fu_1182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln886_1_reg_1620 <= grp_fu_1234_p3;
        select_ln10_2_reg_1575 <= grp_fu_411_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln886_5_reg_1695 <= add_ln886_5_fu_1063_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln886_6_reg_1760 <= add_ln886_6_fu_1207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln886_7_reg_1715 <= grp_fu_1259_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln886_9_reg_1735 <= add_ln886_9_fu_1125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1323 <= ap_sig_allocacmp_i_1;
        icmp_ln10_reg_1335 <= icmp_ln10_fu_502_p2;
        tmp_cast_reg_1328[7 : 4] <= tmp_cast_fu_493_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_421 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_430 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_464 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_33_cast_reg_1474[4 : 0] <= tmp_33_cast_fu_726_p3[4 : 0];
        tmp_34_cast_reg_1485[4 : 0] <= tmp_34_cast_fu_738_p3[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln232_46_reg_1418[4 : 0] <= zext_ln232_46_fu_635_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_address0 = zext_ln10_fu_984_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_address0 = zext_ln232_44_fu_919_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_address0 = zext_ln232_40_fu_829_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_address0 = zext_ln232_36_fu_775_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_address0 = zext_ln232_32_fu_717_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_address0 = zext_ln232_45_fu_677_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_address0 = zext_ln232_41_fu_630_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_address0 = zext_ln232_37_fu_582_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            a_address1 = zext_ln232_42_fu_903_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            a_address1 = zext_ln232_38_fu_818_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            a_address1 = zext_ln232_34_fu_760_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            a_address1 = zext_ln232_31_fu_706_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            a_address1 = zext_ln232_43_fu_666_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            a_address1 = zext_ln232_39_fu_619_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_address1 = zext_ln232_35_fu_571_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_address1 = zext_ln232_33_fu_549_p1;
        end else begin
            a_address1 = 'bx;
        end
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1335 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_116;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_120;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_address0 = zext_ln232_63_fu_1009_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_address0 = zext_ln232_62_fu_941_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        b_address0 = zext_ln232_60_fu_849_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_address0 = zext_ln232_56_fu_795_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_address0 = zext_ln232_52_fu_745_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        b_address0 = zext_ln232_61_fu_695_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_address0 = zext_ln232_57_fu_655_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_address0 = zext_ln232_53_fu_608_p1;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_address1 = j_cast_fu_996_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_address1 = zext_ln232_49_fu_933_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        b_address1 = zext_ln232_58_fu_841_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_address1 = zext_ln232_54_fu_783_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_address1 = zext_ln232_50_fu_733_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        b_address1 = zext_ln232_59_fu_687_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_address1 = zext_ln232_55_fu_644_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_address1 = zext_ln232_51_fu_597_p1;
    end else begin
        b_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        b_ce1 = 1'b1;
    end else begin
        b_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_411_p0 = icmp_ln12_reg_1349;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_411_p0 = icmp_ln12_fu_527_p2;
    end else begin
        grp_fu_411_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_411_p1 = tmp_16_cast_reg_1358;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_411_p1 = tmp_16_cast_fu_534_p3;
    end else begin
        grp_fu_411_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_411_p2 = tmp_cast_reg_1328;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_411_p2 = tmp_cast_fu_493_p3;
    end else begin
        grp_fu_411_p2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        prod_ce0 = 1'b1;
    end else begin
        prod_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        prod_we0 = 1'b1;
    end else begin
        prod_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_1_fu_508_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln10_fu_517_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign add_ln12_fu_969_p2 = (select_ln10_reg_1370 + 5'd1);

assign add_ln13_fu_946_p2 = (tmp_s_fu_881_p3 + zext_ln232_46_reg_1418);

assign add_ln232_1_fu_591_p2 = (zext_ln232_47_fu_587_p1 + 7'd48);

assign add_ln232_2_fu_602_p2 = ($signed(zext_ln232_47_fu_587_p1) + $signed(7'd80));

assign add_ln232_3_fu_638_p2 = (zext_ln232_46_fu_635_p1 + 8'd112);

assign add_ln232_4_fu_649_p2 = ($signed(zext_ln232_46_fu_635_p1) + $signed(8'd144));

assign add_ln232_5_fu_682_p2 = ($signed(zext_ln232_46_reg_1418) + $signed(8'd176));

assign add_ln232_fu_927_p2 = (zext_ln232_48_fu_924_p1 + 6'd16);

assign add_ln886_12_fu_1172_p2 = (zext_ln886_12_fu_1169_p1 + zext_ln886_11_fu_1166_p1);

assign add_ln886_13_fu_1182_p2 = (zext_ln886_13_fu_1178_p1 + zext_ln886_10_fu_1163_p1);

assign add_ln886_14_fu_1223_p2 = (zext_ln886_14_fu_1220_p1 + zext_ln886_7_fu_1217_p1);

assign add_ln886_2_fu_1194_p2 = (zext_ln886_2_fu_1191_p1 + zext_ln886_1_fu_1188_p1);

assign add_ln886_5_fu_1063_p2 = (zext_ln886_5_fu_1060_p1 + zext_ln886_4_fu_1057_p1);

assign add_ln886_6_fu_1207_p2 = (zext_ln886_6_fu_1204_p1 + zext_ln886_3_fu_1200_p1);

assign add_ln886_9_fu_1125_p2 = (zext_ln886_9_fu_1122_p1 + zext_ln886_8_fu_1119_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1249 = ((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_305 = ((icmp_ln10_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_465 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign grp_fu_1234_p0 = grp_fu_1234_p00;

assign grp_fu_1234_p00 = reg_434;

assign grp_fu_1234_p1 = grp_fu_1234_p10;

assign grp_fu_1234_p10 = reg_421;

assign grp_fu_1234_p2 = grp_fu_1234_p20;

assign grp_fu_1234_p20 = mul_ln1540_2_fu_858_p2;

assign grp_fu_1242_p0 = grp_fu_1242_p00;

assign grp_fu_1242_p00 = reg_439;

assign grp_fu_1242_p1 = grp_fu_1242_p10;

assign grp_fu_1242_p10 = reg_425;

assign grp_fu_1242_p2 = grp_fu_1242_p20;

assign grp_fu_1242_p20 = mul_ln1540_4_fu_955_p2;

assign grp_fu_1250_p0 = grp_fu_1250_p00;

assign grp_fu_1250_p00 = reg_454;

assign grp_fu_1250_p1 = grp_fu_1250_p10;

assign grp_fu_1250_p10 = reg_430;

assign grp_fu_1250_p2 = grp_fu_1250_p20;

assign grp_fu_1250_p20 = mul_ln1540_6_fu_1018_p2;

assign grp_fu_1259_p0 = grp_fu_1259_p00;

assign grp_fu_1259_p00 = reg_459;

assign grp_fu_1259_p1 = grp_fu_1259_p10;

assign grp_fu_1259_p10 = reg_444;

assign grp_fu_1259_p2 = grp_fu_1259_p20;

assign grp_fu_1259_p20 = mul_ln1540_8_fu_1044_p2;

assign grp_fu_1267_p0 = grp_fu_1267_p00;

assign grp_fu_1267_p00 = reg_434;

assign grp_fu_1267_p1 = grp_fu_1267_p10;

assign grp_fu_1267_p10 = reg_449;

assign grp_fu_1267_p2 = grp_fu_1267_p20;

assign grp_fu_1267_p20 = mul_ln1540_10_fu_1080_p2;

assign grp_fu_1276_p0 = grp_fu_1276_p00;

assign grp_fu_1276_p00 = b_load_13_reg_1500;

assign grp_fu_1276_p1 = grp_fu_1276_p10;

assign grp_fu_1276_p10 = reg_421;

assign grp_fu_1276_p2 = grp_fu_1276_p20;

assign grp_fu_1276_p20 = mul_ln1540_12_fu_1109_p2;

assign grp_fu_1284_p0 = grp_fu_1284_p00;

assign grp_fu_1284_p00 = reg_434;

assign grp_fu_1284_p1 = grp_fu_1284_p10;

assign grp_fu_1284_p10 = a_load_15_reg_1469;

assign grp_fu_1284_p2 = grp_fu_1284_p20;

assign grp_fu_1284_p20 = mul_ln1540_14_fu_1137_p2;

assign grp_fu_1293_p0 = grp_fu_1293_p00;

assign grp_fu_1293_p00 = reg_454;

assign grp_fu_1293_p1 = grp_fu_1293_p10;

assign grp_fu_1293_p10 = a_load_reg_1675;

assign grp_fu_1293_p2 = grp_fu_1293_p20;

assign grp_fu_1293_p20 = mul_ln1540_1_fu_1153_p2;

assign grp_fu_411_p3 = ((grp_fu_411_p0[0:0] == 1'b1) ? grp_fu_411_p1 : grp_fu_411_p2);

assign grp_fu_416_p3 = ((icmp_ln12_reg_1349[0:0] == 1'b1) ? tmp_16_cast_reg_1358 : tmp_cast_reg_1328);

assign icmp_ln10_fu_502_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_527_p2 = ((ap_sig_allocacmp_j_load == 5'd16) ? 1'b1 : 1'b0);

assign j_cast_fu_996_p1 = select_ln10_reg_1370;

assign mul_ln1540_10_fu_1080_p0 = mul_ln1540_10_fu_1080_p00;

assign mul_ln1540_10_fu_1080_p00 = reg_459;

assign mul_ln1540_10_fu_1080_p1 = mul_ln1540_10_fu_1080_p10;

assign mul_ln1540_10_fu_1080_p10 = reg_444;

assign mul_ln1540_12_fu_1109_p0 = mul_ln1540_12_fu_1109_p00;

assign mul_ln1540_12_fu_1109_p00 = reg_464;

assign mul_ln1540_12_fu_1109_p1 = mul_ln1540_12_fu_1109_p10;

assign mul_ln1540_12_fu_1109_p10 = reg_449;

assign mul_ln1540_14_fu_1137_p0 = mul_ln1540_14_fu_1137_p00;

assign mul_ln1540_14_fu_1137_p00 = b_load_14_reg_1665;

assign mul_ln1540_14_fu_1137_p1 = mul_ln1540_14_fu_1137_p10;

assign mul_ln1540_14_fu_1137_p10 = a_load_14_reg_1635;

assign mul_ln1540_1_fu_1153_p0 = mul_ln1540_1_fu_1153_p00;

assign mul_ln1540_1_fu_1153_p00 = b_load_1_reg_1650;

assign mul_ln1540_1_fu_1153_p1 = mul_ln1540_1_fu_1153_p10;

assign mul_ln1540_1_fu_1153_p10 = a_load_1_reg_1505;

assign mul_ln1540_2_fu_858_p0 = mul_ln1540_2_fu_858_p00;

assign mul_ln1540_2_fu_858_p00 = reg_439;

assign mul_ln1540_2_fu_858_p1 = mul_ln1540_2_fu_858_p10;

assign mul_ln1540_2_fu_858_p10 = reg_425;

assign mul_ln1540_4_fu_955_p0 = mul_ln1540_4_fu_955_p00;

assign mul_ln1540_4_fu_955_p00 = reg_464;

assign mul_ln1540_4_fu_955_p1 = mul_ln1540_4_fu_955_p10;

assign mul_ln1540_4_fu_955_p10 = reg_425;

assign mul_ln1540_6_fu_1018_p0 = mul_ln1540_6_fu_1018_p00;

assign mul_ln1540_6_fu_1018_p00 = reg_439;

assign mul_ln1540_6_fu_1018_p1 = mul_ln1540_6_fu_1018_p10;

assign mul_ln1540_6_fu_1018_p10 = reg_430;

assign mul_ln1540_8_fu_1044_p0 = mul_ln1540_8_fu_1044_p00;

assign mul_ln1540_8_fu_1044_p00 = reg_454;

assign mul_ln1540_8_fu_1044_p1 = mul_ln1540_8_fu_1044_p10;

assign mul_ln1540_8_fu_1044_p10 = reg_425;

assign or_ln10_10_fu_624_p2 = (grp_fu_416_p3 | 8'd11);

assign or_ln10_11_fu_897_p2 = (grp_fu_416_p3 | 8'd12);

assign or_ln10_12_fu_660_p2 = (grp_fu_411_p3 | 8'd13);

assign or_ln10_13_fu_913_p2 = (select_ln10_31_fu_908_p3 | 8'd14);

assign or_ln10_14_fu_671_p2 = (grp_fu_416_p3 | 8'd15);

assign or_ln10_1_fu_711_p2 = (grp_fu_416_p3 | 8'd2);

assign or_ln10_2_fu_543_p2 = (grp_fu_411_p3 | 8'd3);

assign or_ln10_3_fu_754_p2 = (grp_fu_411_p3 | 8'd4);

assign or_ln10_4_fu_565_p2 = (grp_fu_411_p3 | 8'd5);

assign or_ln10_5_fu_769_p2 = (grp_fu_416_p3 | 8'd6);

assign or_ln10_6_fu_576_p2 = (grp_fu_416_p3 | 8'd7);

assign or_ln10_7_fu_812_p2 = (grp_fu_411_p3 | 8'd8);

assign or_ln10_8_fu_613_p2 = (grp_fu_411_p3 | 8'd9);

assign or_ln10_9_fu_823_p2 = (grp_fu_416_p3 | 8'd10);

assign or_ln10_fu_700_p2 = (grp_fu_411_p3 | 8'd1);

assign prod_address0 = zext_ln13_fu_1213_p1;

assign prod_d0 = add_ln886_14_fu_1223_p2;

assign select_ln10_1_fu_872_p3 = ((icmp_ln12_reg_1349[0:0] == 1'b1) ? add_ln10_reg_1344 : i_1_reg_1323);

assign select_ln10_31_fu_908_p3 = ((icmp_ln12_reg_1349[0:0] == 1'b1) ? tmp_16_cast_reg_1358 : tmp_cast_reg_1328);

assign select_ln10_fu_559_p3 = ((icmp_ln12_reg_1349[0:0] == 1'b1) ? 5'd0 : j_load_reg_1339);

assign sext_ln232_1_fu_846_p1 = tmp_34_cast_reg_1485;

assign sext_ln232_2_fu_692_p1 = add_ln232_2_reg_1398;

assign sext_ln232_3_fu_938_p1 = tmp_33_cast_reg_1474;

assign sext_ln232_4_fu_1005_p1 = $signed(xor_ln232_fu_1000_p2);

assign sext_ln232_fu_780_p1 = tmp_33_cast_reg_1474;

assign tmp_16_cast_fu_534_p3 = {{trunc_ln10_fu_523_p1}, {4'd0}};

assign tmp_33_cast_fu_726_p3 = {{1'd1}, {select_ln10_reg_1370}};

assign tmp_34_cast_fu_738_p3 = {{2'd2}, {select_ln10_reg_1370}};

assign tmp_36_cast_fu_788_p3 = {{3'd4}, {select_ln10_reg_1370}};

assign tmp_37_cast_fu_834_p3 = {{3'd5}, {select_ln10_reg_1370}};

assign tmp_cast_fu_493_p3 = {{trunc_ln232_fu_489_p1}, {4'd0}};

assign tmp_s_fu_881_p3 = {{trunc_ln13_fu_877_p1}, {4'd0}};

assign trunc_ln10_fu_523_p1 = add_ln10_fu_517_p2[3:0];

assign trunc_ln13_fu_877_p1 = select_ln10_1_fu_872_p3[3:0];

assign trunc_ln232_fu_489_p1 = ap_sig_allocacmp_i_1[3:0];

assign xor_ln232_fu_1000_p2 = (select_ln10_reg_1370 ^ 5'd16);

assign zext_ln10_fu_984_p1 = select_ln10_2_reg_1575;

assign zext_ln13_fu_1213_p1 = add_ln13_reg_1605;

assign zext_ln232_31_fu_706_p1 = or_ln10_fu_700_p2;

assign zext_ln232_32_fu_717_p1 = or_ln10_1_fu_711_p2;

assign zext_ln232_33_fu_549_p1 = or_ln10_2_fu_543_p2;

assign zext_ln232_34_fu_760_p1 = or_ln10_3_fu_754_p2;

assign zext_ln232_35_fu_571_p1 = or_ln10_4_fu_565_p2;

assign zext_ln232_36_fu_775_p1 = or_ln10_5_fu_769_p2;

assign zext_ln232_37_fu_582_p1 = or_ln10_6_fu_576_p2;

assign zext_ln232_38_fu_818_p1 = or_ln10_7_fu_812_p2;

assign zext_ln232_39_fu_619_p1 = or_ln10_8_fu_613_p2;

assign zext_ln232_40_fu_829_p1 = or_ln10_9_fu_823_p2;

assign zext_ln232_41_fu_630_p1 = or_ln10_10_fu_624_p2;

assign zext_ln232_42_fu_903_p1 = or_ln10_11_fu_897_p2;

assign zext_ln232_43_fu_666_p1 = or_ln10_12_fu_660_p2;

assign zext_ln232_44_fu_919_p1 = or_ln10_13_fu_913_p2;

assign zext_ln232_45_fu_677_p1 = or_ln10_14_fu_671_p2;

assign zext_ln232_46_fu_635_p1 = select_ln10_reg_1370;

assign zext_ln232_47_fu_587_p1 = select_ln10_fu_559_p3;

assign zext_ln232_48_fu_924_p1 = select_ln10_reg_1370;

assign zext_ln232_49_fu_933_p1 = add_ln232_fu_927_p2;

assign zext_ln232_50_fu_733_p1 = $unsigned(tmp_33_cast_fu_726_p3);

assign zext_ln232_51_fu_597_p1 = add_ln232_1_fu_591_p2;

assign zext_ln232_52_fu_745_p1 = $unsigned(tmp_34_cast_fu_738_p3);

assign zext_ln232_53_fu_608_p1 = $unsigned(add_ln232_2_fu_602_p2);

assign zext_ln232_54_fu_783_p1 = $unsigned(sext_ln232_fu_780_p1);

assign zext_ln232_55_fu_644_p1 = add_ln232_3_fu_638_p2;

assign zext_ln232_56_fu_795_p1 = tmp_36_cast_fu_788_p3;

assign zext_ln232_57_fu_655_p1 = add_ln232_4_fu_649_p2;

assign zext_ln232_58_fu_841_p1 = tmp_37_cast_fu_834_p3;

assign zext_ln232_59_fu_687_p1 = add_ln232_5_fu_682_p2;

assign zext_ln232_60_fu_849_p1 = $unsigned(sext_ln232_1_fu_846_p1);

assign zext_ln232_61_fu_695_p1 = $unsigned(sext_ln232_2_fu_692_p1);

assign zext_ln232_62_fu_941_p1 = $unsigned(sext_ln232_3_fu_938_p1);

assign zext_ln232_63_fu_1009_p1 = $unsigned(sext_ln232_4_fu_1005_p1);

assign zext_ln886_10_fu_1163_p1 = add_ln886_9_reg_1735;

assign zext_ln886_11_fu_1166_p1 = add_ln886_10_reg_1745;

assign zext_ln886_12_fu_1169_p1 = grp_fu_1284_p3;

assign zext_ln886_13_fu_1178_p1 = add_ln886_12_fu_1172_p2;

assign zext_ln886_14_fu_1220_p1 = add_ln886_13_reg_1755;

assign zext_ln886_1_fu_1188_p1 = grp_fu_1293_p3;

assign zext_ln886_2_fu_1191_p1 = add_ln886_1_reg_1620;

assign zext_ln886_3_fu_1200_p1 = add_ln886_2_fu_1194_p2;

assign zext_ln886_4_fu_1057_p1 = add_ln886_3_reg_1670;

assign zext_ln886_5_fu_1060_p1 = grp_fu_1250_p3;

assign zext_ln886_6_fu_1204_p1 = add_ln886_5_reg_1695;

assign zext_ln886_7_fu_1217_p1 = add_ln886_6_reg_1760;

assign zext_ln886_8_fu_1119_p1 = add_ln886_7_reg_1715;

assign zext_ln886_9_fu_1122_p1 = grp_fu_1267_p3;

always @ (posedge ap_clk) begin
    tmp_cast_reg_1328[3:0] <= 4'b0000;
    tmp_16_cast_reg_1358[3:0] <= 4'b0000;
    zext_ln232_46_reg_1418[7:5] <= 3'b000;
    tmp_33_cast_reg_1474[5] <= 1'b1;
    tmp_34_cast_reg_1485[6:5] <= 2'b10;
end

endmodule //matrix_mult
